{

	vector<string> samples;
//	samples.push_back("GJets_TuneZ2_100_HT_200_7TeV-madgraph-Summer11-PU_S4.root");
//	samples.push_back("GJets_TuneZ2_200_HT_inf_7TeV-madgraph-Summer11-PU_S4.root");
//	samples.push_back("GJets_TuneZ2_40_HT_100_7TeV-madgraph-Summer11-PU_S4.root");
//	samples.push_back("GVJets_7TeV-madgraph-Summer11-PU_S4.root");
//	samples.push_back("QCD_Pt-1000to1400_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-120to170_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-1400to1800_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-15to30_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-170to300_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-1800_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-300to470_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-30to50_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//        samples.push_back("QCD_Pt-470to600_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-50to80_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//        samples.push_back("QCD_Pt-600to800_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-800to1000_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
//	samples.push_back("QCD_Pt-80to120_TuneZ2_7TeV_pythia6_Summer11_PU_S4.root");
	samples.push_back("T_TuneZ2_s-channel_7TeV-powheg-tauola_Summer11_2.root");
	samples.push_back("T_TuneZ2_t-channel_7TeV-powheg-tauola_Summer11.root");
	samples.push_back("T_TuneZ2_tW-channel-DR_7TeV-powheg-tauola_Summer11.root");
	samples.push_back("Tbar_TuneZ2_s-channel_7TeV-powheg-tauola_Summer11.root");
	samples.push_back("Tbar_TuneZ2_t-channel_7TeV-powheg-tauola_Summer11.root");
	samples.push_back("Tbar_TuneZ2_tW-channel-DR_7TeV-powheg-tauola_Summer11.root");

	for(unsigned int i=0; i<samples.size(); ++i){
		TFile *files;
		files      = TFile::Open(samples[i].c_str());
		TH1D *histo= (TH1D*) files->Get("pileup");
		TString nentries = TString::Format("%.0f",histo ->GetEntries());
		cout << samples[i] << " nentries: " << nentries<< endl;
	}	


}
